// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "QueryUpdate.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



void
PlatformInfoEx::operator>>= (cdrStream &_n) const
{
  platform >>= _n;
  _n.marshalString(OSName,0);
  _n.marshalString(OSPackName,0);
  OSMainVersion >>= _n;
  OSSubVersion >>= _n;
  OSRunMode >>= _n;

}

void
PlatformInfoEx::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)platform <<= _n;
  OSName = _n.unmarshalString(0);
  OSPackName = _n.unmarshalString(0);
  (::CORBA::Long&)OSMainVersion <<= _n;
  (::CORBA::Long&)OSSubVersion <<= _n;
  (::CORBA::Long&)OSRunMode <<= _n;

}

FiUpdateMgr_ptr FiUpdateMgr_Helper::_nil() {
  return ::FiUpdateMgr::_nil();
}

::CORBA::Boolean FiUpdateMgr_Helper::is_nil(::FiUpdateMgr_ptr p) {
  return ::CORBA::is_nil(p);

}

void FiUpdateMgr_Helper::release(::FiUpdateMgr_ptr p) {
  ::CORBA::release(p);
}

void FiUpdateMgr_Helper::marshalObjRef(::FiUpdateMgr_ptr obj, cdrStream& s) {
  ::FiUpdateMgr::_marshalObjRef(obj, s);
}

FiUpdateMgr_ptr FiUpdateMgr_Helper::unmarshalObjRef(cdrStream& s) {
  return ::FiUpdateMgr::_unmarshalObjRef(s);
}

void FiUpdateMgr_Helper::duplicate(::FiUpdateMgr_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

FiUpdateMgr_ptr
FiUpdateMgr::_duplicate(::FiUpdateMgr_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

FiUpdateMgr_ptr
FiUpdateMgr::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


FiUpdateMgr_ptr
FiUpdateMgr::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

FiUpdateMgr_ptr
FiUpdateMgr::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_FiUpdateMgr _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_FiUpdateMgr* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_FiUpdateMgr;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* FiUpdateMgr::_PD_repoId = "IDL:FiUpdateMgr:1.0";


_objref_FiUpdateMgr::~_objref_FiUpdateMgr() {
  
}


_objref_FiUpdateMgr::_objref_FiUpdateMgr(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::FiUpdateMgr::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_FiUpdateMgr::_ptrToObjRef(const char* id)
{
  if( id == ::FiUpdateMgr::_PD_repoId )
    return (::FiUpdateMgr_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::FiUpdateMgr::_PD_repoId) )
    return (::FiUpdateMgr_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _clong_i_cstring_i_cstring_i_cstring_o_cstring_o_cstring_o_cstring
class _0RL_cd_1a070d6de3072870_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_1a070d6de3072870_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::String_var arg_2_;
  const char* arg_2;
  ::CORBA::String_var arg_3;
  ::CORBA::String_var arg_4;
  ::CORBA::String_var arg_5;
  ::CORBA::Long result;
};

void _0RL_cd_1a070d6de3072870_00000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);
  _n.marshalString(arg_2,0);

}

void _0RL_cd_1a070d6de3072870_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();

}

void _0RL_cd_1a070d6de3072870_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  _n.marshalString(arg_3,0);
  _n.marshalString(arg_4,0);
  _n.marshalString(arg_5,0);

}

void _0RL_cd_1a070d6de3072870_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  arg_3 = _n.unmarshalString(0);
  arg_4 = _n.unmarshalString(0);
  arg_5 = _n.unmarshalString(0);

}

const char* const _0RL_cd_1a070d6de3072870_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_1a070d6de3072870_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_1a070d6de3072870_00000000* tcd = (_0RL_cd_1a070d6de3072870_00000000*)cd;
  _impl_FiUpdateMgr* impl = (_impl_FiUpdateMgr*) svnt->_ptrToInterface(FiUpdateMgr::_PD_repoId);
  tcd->result = impl->QueryCurVersion(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3.out(), tcd->arg_4.out(), tcd->arg_5.out());


}

::CORBA::Long _objref_FiUpdateMgr::QueryCurVersion(const char* inversion, const char* indate, const char* inpatchno, ::CORBA::String_out version, ::CORBA::String_out date, ::CORBA::String_out patchno)
{
  _0RL_cd_1a070d6de3072870_00000000 _call_desc(_0RL_lcfn_1a070d6de3072870_10000000, "QueryCurVersion", 16);
  _call_desc.arg_0 = inversion;
  _call_desc.arg_1 = indate;
  _call_desc.arg_2 = inpatchno;

  _invoke(_call_desc);
  version = _call_desc.arg_3._retn();
  date = _call_desc.arg_4._retn();
  patchno = _call_desc.arg_5._retn();
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cPlatformInfoEx_i_clong_i_cstring_i_cstring_i_cstring_o_cstring_o_clong_o_clonglong
class _0RL_cd_1a070d6de3072870_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_1a070d6de3072870_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  PlatformInfoEx_var arg_0_;
  const PlatformInfoEx* arg_0;
  ::CORBA::Long arg_1;
  ::CORBA::String_var arg_2_;
  const char* arg_2;
  ::CORBA::String_var arg_3_;
  const char* arg_3;
  ::CORBA::String_var arg_4_;
  const char* arg_4;
  ::CORBA::String_var arg_5;
  ::CORBA::Long arg_6;
  ::CORBA::LongLong arg_7;
  ::CORBA::Long result;
};

void _0RL_cd_1a070d6de3072870_20000000::marshalArguments(cdrStream& _n)
{
  (const PlatformInfoEx&) *arg_0 >>= _n;
  arg_1 >>= _n;
  _n.marshalString(arg_2,0);
  _n.marshalString(arg_3,0);
  _n.marshalString(arg_4,0);

}

void _0RL_cd_1a070d6de3072870_20000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new PlatformInfoEx;
  (PlatformInfoEx&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();
  (::CORBA::Long&)arg_1 <<= _n;
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();
  arg_3_ = _n.unmarshalString(0);
  arg_3 = arg_3_.in();
  arg_4_ = _n.unmarshalString(0);
  arg_4 = arg_4_.in();

}

void _0RL_cd_1a070d6de3072870_20000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  _n.marshalString(arg_5,0);
  arg_6 >>= _n;
  arg_7 >>= _n;

}

void _0RL_cd_1a070d6de3072870_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  arg_5 = _n.unmarshalString(0);
  (::CORBA::Long&)arg_6 <<= _n;
  (::CORBA::LongLong&)arg_7 <<= _n;

}

const char* const _0RL_cd_1a070d6de3072870_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_1a070d6de3072870_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_1a070d6de3072870_20000000* tcd = (_0RL_cd_1a070d6de3072870_20000000*)cd;
  _impl_FiUpdateMgr* impl = (_impl_FiUpdateMgr*) svnt->_ptrToInterface(FiUpdateMgr::_PD_repoId);
  tcd->result = impl->StartupUpdate(*tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5.out(), tcd->arg_6, tcd->arg_7);


}

::CORBA::Long _objref_FiUpdateMgr::StartupUpdate(const ::PlatformInfoEx& PInfo, ::CORBA::Long which, const char* version, const char* date, const char* patchno, ::CORBA::String_out filename, ::CORBA::Long& size, ::CORBA::LongLong& ref)
{
  _0RL_cd_1a070d6de3072870_20000000 _call_desc(_0RL_lcfn_1a070d6de3072870_30000000, "StartupUpdate", 14);
  _call_desc.arg_0 = &(::PlatformInfoEx&) PInfo;
  _call_desc.arg_1 = which;
  _call_desc.arg_2 = version;
  _call_desc.arg_3 = date;
  _call_desc.arg_4 = patchno;

  _invoke(_call_desc);
  filename = _call_desc.arg_5._retn();
  size = _call_desc.arg_6;
  ref = _call_desc.arg_7;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_clonglong_i_clong_o_cbfstream_o_clong_o_clong
class _0RL_cd_1a070d6de3072870_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_1a070d6de3072870_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::LongLong arg_0;
  ::CORBA::Long arg_1;
  bfstream_var arg_2;
  ::CORBA::Long arg_3;
  ::CORBA::Long arg_4;
  ::CORBA::Long result;
};

void _0RL_cd_1a070d6de3072870_40000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_1a070d6de3072870_40000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::LongLong&)arg_0 <<= _n;
  (::CORBA::Long&)arg_1 <<= _n;

}

void _0RL_cd_1a070d6de3072870_40000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  (const bfstream&) arg_2 >>= _n;
  arg_3 >>= _n;
  arg_4 >>= _n;

}

void _0RL_cd_1a070d6de3072870_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  arg_2 = new bfstream;
  (bfstream&)arg_2 <<= _n;
  (::CORBA::Long&)arg_3 <<= _n;
  (::CORBA::Long&)arg_4 <<= _n;

}

const char* const _0RL_cd_1a070d6de3072870_40000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_1a070d6de3072870_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_1a070d6de3072870_40000000* tcd = (_0RL_cd_1a070d6de3072870_40000000*)cd;
  _impl_FiUpdateMgr* impl = (_impl_FiUpdateMgr*) svnt->_ptrToInterface(FiUpdateMgr::_PD_repoId);
  tcd->result = impl->TranslateFile(tcd->arg_0, tcd->arg_1, tcd->arg_2.out(), tcd->arg_3, tcd->arg_4);


}

::CORBA::Long _objref_FiUpdateMgr::TranslateFile(::CORBA::LongLong ref, ::CORBA::Long packid, ::bfstream_out bfs, ::CORBA::Long& checknum, ::CORBA::Long& flag)
{
  _0RL_cd_1a070d6de3072870_40000000 _call_desc(_0RL_lcfn_1a070d6de3072870_50000000, "TranslateFile", 14);
  _call_desc.arg_0 = ref;
  _call_desc.arg_1 = packid;

  _invoke(_call_desc);
  bfs = _call_desc.arg_2._retn();
  checknum = _call_desc.arg_3;
  flag = _call_desc.arg_4;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cstring_o_clong_o_clonglong
class _0RL_cd_1a070d6de3072870_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_1a070d6de3072870_60000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::Long arg_1;
  ::CORBA::LongLong arg_2;
  ::CORBA::Long result;
};

void _0RL_cd_1a070d6de3072870_60000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_1a070d6de3072870_60000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_1a070d6de3072870_60000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_1a070d6de3072870_60000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  (::CORBA::Long&)arg_1 <<= _n;
  (::CORBA::LongLong&)arg_2 <<= _n;

}

const char* const _0RL_cd_1a070d6de3072870_60000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_1a070d6de3072870_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_1a070d6de3072870_60000000* tcd = (_0RL_cd_1a070d6de3072870_60000000*)cd;
  _impl_FiUpdateMgr* impl = (_impl_FiUpdateMgr*) svnt->_ptrToInterface(FiUpdateMgr::_PD_repoId);
  tcd->result = impl->starupTrans(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

::CORBA::Long _objref_FiUpdateMgr::starupTrans(const char* fileName, ::CORBA::Long& size, ::CORBA::LongLong& fileRef)
{
  _0RL_cd_1a070d6de3072870_60000000 _call_desc(_0RL_lcfn_1a070d6de3072870_70000000, "starupTrans", 12);
  _call_desc.arg_0 = fileName;

  _invoke(_call_desc);
  size = _call_desc.arg_1;
  fileRef = _call_desc.arg_2;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_1a070d6de3072870_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_1a070d6de3072870_40000000* tcd = (_0RL_cd_1a070d6de3072870_40000000*)cd;
  _impl_FiUpdateMgr* impl = (_impl_FiUpdateMgr*) svnt->_ptrToInterface(FiUpdateMgr::_PD_repoId);
  tcd->result = impl->transFile(tcd->arg_0, tcd->arg_1, tcd->arg_2.out(), tcd->arg_3, tcd->arg_4);


}

::CORBA::Long _objref_FiUpdateMgr::transFile(::CORBA::LongLong fileRef, ::CORBA::Long packid, ::bfstream_out bfs, ::CORBA::Long& checknum, ::CORBA::Long& flag)
{
  _0RL_cd_1a070d6de3072870_40000000 _call_desc(_0RL_lcfn_1a070d6de3072870_80000000, "transFile", 10);
  _call_desc.arg_0 = fileRef;
  _call_desc.arg_1 = packid;

  _invoke(_call_desc);
  bfs = _call_desc.arg_2._retn();
  checknum = _call_desc.arg_3;
  flag = _call_desc.arg_4;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cstring_o_a100_a2_clong
class _0RL_cd_1a070d6de3072870_90000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_1a070d6de3072870_90000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  patchSet_t arg_1_;
  patchSet_t_slice* arg_1;
  ::CORBA::Long result;
};

void _0RL_cd_1a070d6de3072870_90000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_1a070d6de3072870_90000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_1a070d6de3072870_90000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((patchSet_t_slice*)arg_1),800,omni::ALIGN_4);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_4, 800);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 100; _0i0++){
      for (_CORBA_ULong _0i1 = 0; _0i1 < 2; _0i1++){
        arg_1[_0i0][_0i1] >>= _n;
      }
    }
  }

}

void _0RL_cd_1a070d6de3072870_90000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  _n.unmarshalArrayLong((_CORBA_Long*)((patchSet_t_slice*)arg_1), 200);

}

const char* const _0RL_cd_1a070d6de3072870_90000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_1a070d6de3072870_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_1a070d6de3072870_90000000* tcd = (_0RL_cd_1a070d6de3072870_90000000*)cd;
  _impl_FiUpdateMgr* impl = (_impl_FiUpdateMgr*) svnt->_ptrToInterface(FiUpdateMgr::_PD_repoId);
  tcd->result = impl->queryPatchs(tcd->arg_0, tcd->arg_1);


}

::CORBA::Long _objref_FiUpdateMgr::queryPatchs(const char* version, ::patchSet_t patchs)
{
  _0RL_cd_1a070d6de3072870_90000000 _call_desc(_0RL_lcfn_1a070d6de3072870_a0000000, "queryPatchs", 12);
  _call_desc.arg_0 = version;
  _call_desc.arg_1 = &patchs[0];

  _invoke(_call_desc);
  return _call_desc.result;


}
_pof_FiUpdateMgr::~_pof_FiUpdateMgr() {}


omniObjRef*
_pof_FiUpdateMgr::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_FiUpdateMgr(ior, id);
}


::CORBA::Boolean
_pof_FiUpdateMgr::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::FiUpdateMgr::_PD_repoId) )
    return 1;
  
  return 0;
}

const _pof_FiUpdateMgr _the_pof_FiUpdateMgr;

_impl_FiUpdateMgr::~_impl_FiUpdateMgr() {}


::CORBA::Boolean
_impl_FiUpdateMgr::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "QueryCurVersion") ) {

    _0RL_cd_1a070d6de3072870_00000000 _call_desc(_0RL_lcfn_1a070d6de3072870_10000000, "QueryCurVersion", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "StartupUpdate") ) {

    _0RL_cd_1a070d6de3072870_20000000 _call_desc(_0RL_lcfn_1a070d6de3072870_30000000, "StartupUpdate", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "TranslateFile") ) {

    _0RL_cd_1a070d6de3072870_40000000 _call_desc(_0RL_lcfn_1a070d6de3072870_50000000, "TranslateFile", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "starupTrans") ) {

    _0RL_cd_1a070d6de3072870_60000000 _call_desc(_0RL_lcfn_1a070d6de3072870_70000000, "starupTrans", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "transFile") ) {

    _0RL_cd_1a070d6de3072870_40000000 _call_desc(_0RL_lcfn_1a070d6de3072870_80000000, "transFile", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "queryPatchs") ) {

    _0RL_cd_1a070d6de3072870_90000000 _call_desc(_0RL_lcfn_1a070d6de3072870_a0000000, "queryPatchs", 12, 1);
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_FiUpdateMgr::_ptrToInterface(const char* id)
{
  if( id == ::FiUpdateMgr::_PD_repoId )
    return (::_impl_FiUpdateMgr*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::FiUpdateMgr::_PD_repoId) )
    return (::_impl_FiUpdateMgr*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_FiUpdateMgr::_mostDerivedRepoId()
{
  return ::FiUpdateMgr::_PD_repoId;
}

POA_FiUpdateMgr::~POA_FiUpdateMgr() {}

